[{"code":"#include <stdio.h>\r\n\r\nvoid concatenateStrings(char *dest, const char *src) {\r\n    // Find the end of the destination string\r\n    while (*dest != '\\0') {\r\n        dest++;\r\n    }\r\n    \r\n    // Copy characters from source to destination\r\n    while (*src != '\\0') {\r\n        *dest = *src;\r\n        dest++;\r\n        src++;\r\n    }\r\n    \r\n    // Add null terminator\r\n    *dest = '\\0';\r\n}\r\n\r\nint main() {\r\n    char str1[1000], str2[1000];\r\n    \r\n    // Read first string (can contain spaces)\r\n    printf(\"Enter first string: \");\r\n    fgets(str1, sizeof(str1), stdin);\r\n    \r\n    // Read second string (can contain spaces)\r\n    printf(\"Enter second string: \");\r\n    fgets(str2, sizeof(str2), stdin);\r\n    \r\n    // Remove newline characters from fgets input\r\n    for (int i = 0; str1[i] != '\\0'; i++) {\r\n        if (str1[i] == '\\n') {\r\n            str1[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n    for (int i = 0; str2[i] != '\\0'; i++) {\r\n        if (str2[i] == '\\n') {\r\n            str2[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n    \r\n    // Concatenate the strings\r\n    concatenateStrings(str1, str2);\r\n    \r\n    // Output the result\r\n    printf(\"Concatenated string: %s\\n\", str1);\r\n    \r\n    return 0;\r\n}","language":"c","time":"2025-04-29T04:09:44.904Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nvoid concatenateStrings(char *dest, const char *src) {\r\n    while (*dest != '\\0') {\r\n        dest++;\r\n    }\r\n    \r\n    while (*src != '\\0') {\r\n        *dest = *src;\r\n        dest++;\r\n        src++;\r\n    }\r\n    \r\n    *dest = '\\0';\r\n}\r\n\r\nint main() {\r\n    char str1[1000], str2[1000];\r\n    printf(\"\");\r\n    fgets(str1, sizeof(str1), stdin);\r\n    \r\n    printf(\" \");\r\n    fgets(str2, sizeof(str2), stdin);\r\n    \r\n    for (int i = 0; str1[i] != '\\0'; i++) {\r\n        if (str1[i] == '\\n') {\r\n            str1[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n    for (int i = 0; str2[i] != '\\0'; i++) {\r\n        if (str2[i] == '\\n') {\r\n            str2[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n\r\n    concatenateStrings(str1, str2);\r\n    printf(\"Concatenated string: %s\\n\", str1);\r\n    \r\n    return 0;\r\n}","language":"c","time":"2025-04-29T04:11:35.576Z","isCorrect":false},{"code":"#include <stdio.h>\r\n\r\nvoid concatenateStrings(char *dest, const char *src) {\r\n    while (*dest != '\\0') {\r\n        dest++;\r\n    }\r\n    \r\n    while (*src != '\\0') {\r\n        *dest = *src;\r\n        dest++;\r\n        src++;\r\n    }\r\n    \r\n    *dest = '\\0';\r\n}\r\n\r\nint main() {\r\n    char str1[1000], str2[1000];\r\n    printf(\"\");\r\n    fgets(str1, sizeof(str1), stdin);\r\n    \r\n    printf(\" \");\r\n    fgets(str2, sizeof(str2), stdin);\r\n    \r\n    for (int i = 0; str1[i] != '\\0'; i++) {\r\n        if (str1[i] == '\\n') {\r\n            str1[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n    for (int i = 0; str2[i] != '\\0'; i++) {\r\n        if (str2[i] == '\\n') {\r\n            str2[i] = '\\0';\r\n            break;\r\n        }\r\n    }\r\n\r\n    concatenateStrings(str1, str2);\r\n    printf(\"%s\\n\", str1);\r\n    \r\n    return 0;\r\n}","language":"c","time":"2025-04-29T04:12:07.537Z","isCorrect":false}]